{"version":3,"sources":["app/shared/components/Fire/index.tsx","app/shared/components/VideoBackground/index.tsx","app/shared/components/Title/index.tsx","app/utils/index.ts","app/redux/user/fetch.ts","app/redux/user/userSlice.ts","app/shared/components/PrivateRoute/index.tsx","app/shared/components/LoadingIndicator/index.tsx","app/shared/components/ErrorBoundary/index.tsx","app/shared/components/Menu/index.tsx","app/shared/components/Furnance/FurnanceWrapper.tsx","app/redux/furnance/fetch.ts","app/redux/furnance/furnanceSlice.ts","app/shared/components/Furnance/SensorFlipCard.tsx","app/redux/appSettings/appSettingsSlice.ts","app/shared/components/Modal/FurnanceModal/index.tsx","app/shared/components/Furnance/FurnanceInfo.tsx","app/shared/components/Skeleton/index.tsx","app/shared/components/Modal/index.tsx","app/pages/Login/index.tsx","app/assets/vids/fire2.mp4","app/pages/NotFound/index.tsx","app/pages/Profile/index.tsx","app/pages/Panel/index.tsx","app/pages/Register/index.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Fire","className","VideoBackground","autoPlay","muted","videoSource","videoLoop","console","log","loop","src","type","Title","children","size","color","getFetchOptions","method","body","token","mode","cache","credentials","redirect","result","headers","Headers","append","Object","assign","JSON","stringify","BASE_URL","fetchFurnances","data","fetch","userSlice","createSlice","name","initialState","status","hubId","user","reducers","logout","state","loginRequest","loginSuccess","action","payload","loginFailure","toast","error","actions","getUserAttributes","getToken","getLoginFetchStatus","getUserId","id","PrivateRoute","props","useSelector","path","exact","component","to","React","Component","Menu","setHidden","isHidden","menuItems","match","useRouteMatch","toggled","toggle","map","item","onClick","window","innerWidth","isExact","activeClassName","text","e","preventDefault","FurnanceWrapper","furnance","history","useHistory","sensors","push","sensor","img","furnanceSlice","furnances","numberOfSkeletons","loadFurnancesRequest","loadFurnancesSuccess","loadFurnancesFailure","setIdle","getFurnances","getStatus","getNumberOfSkeletons","SensorFlipCard","useState","isFlipped","setIsFlipped","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","fill","appSettingsSlice","modal","isVisible","setModal","hideModal","getModal","appSettings","FurnanceModal","furnanceName","furnanceId","nam","setNam","isFetching","setIsFetching","userId","dispatch","useDispatch","handleClick","a","info","response","success","json","value","onChange","el","currentTarget","LoadingIndicator","FurnanceInfo","useParams","find","getFurnanceById","isAdvancedViewToggled","setIsAdvancedViewToggled","useEffect","setInterval","clearInterval","fontSize","style","Skeleton","icons","iconsArr","useMemo","Array","_","Icon","Modal","onClose","onOpen","ReactDOM","createPortal","document","getElementById","Login","useForm","register","handleSubmit","errors","onSubmit","API","request","fetchUser","placeholder","ref","required","username","password","campfire","Profile","fullname","fullName","setFullName","email","setEmail","setPassword","handleChange","useCallback","target","usrVm","Panel","setToggled","setWidth","addEventListener","wnd","removeEventListener","Switch","Logout","Register","memo","setUsername","setFullname","App","NotFound","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","userReducer","furnanceReducer","appSettingsReducer","Boolean","location","hostname","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f4dfa329.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Fire = () => (\r\n  <section className=\"fire\">\r\n    <div className=\"fire-left\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-main\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-right\">\r\n      <div className=\"main-fire\"></div>\r\n      <div className=\"particle-fire\"></div>\r\n    </div>\r\n    <div className=\"fire-bottom\">\r\n      <div className=\"main-fire\"></div>\r\n    </div>\r\n  </section>\r\n);\r\nexport default Fire;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\ninterface VideoBackgroundProps {\r\n  videoSource: string;\r\n  videoLoop?: boolean;\r\n  muted?: boolean;\r\n  autoPlay?: boolean;\r\n}\r\nconst VideoBackground = ({\r\n  autoPlay = true,\r\n  muted = true,\r\n  videoSource,\r\n  videoLoop,\r\n}: VideoBackgroundProps) => {\r\n  console.log(videoSource);\r\n  return (\r\n    <video\r\n      className=\"videoBG\"\r\n      autoPlay={autoPlay}\r\n      muted={muted}\r\n      loop\r\n    >\r\n      <source src={videoSource} type=\"video/mp4\"></source>\r\n    </video>\r\n  );\r\n};\r\nexport default VideoBackground;\r\n","import React from \"react\";\r\nimport './styles.scss'\r\ninterface TitleProps {\r\n  children: string;\r\n  size?: \"vvbig\" | \"vbig\" | \"big\" | \"normal\" | \"small\" | \"vsmall\" | \"vvsmall\";\r\n  color?: \"orangeLight\" | \"orangeDark\" | \"blackDark\" | \"blackLight\";\r\n}\r\nconst Title = ({\r\n  children,\r\n  size = \"big\",\r\n  color = \"orangeDark\",\r\n}: TitleProps) => {\r\n  return <h2 className={`title title--${size} title--${color}`}>{children}</h2>;\r\n};\r\nexport default Title;\r\n","const getFetchOptions = <T>(\r\n  method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\",\r\n  body: T,\r\n  token: string | null,\r\n  mode: \"cors\" | \"no-cors\" = \"cors\",\r\n  cache:\r\n    | \"no-cache\"\r\n    | \"reload\"\r\n    | \"force-cache\"\r\n    | \"only-if-cached\"\r\n    | \"default\" = \"default\",\r\n  credentials?: \"include\" | \"omit\",\r\n  redirect: \"follow\" | \"manual\" | \"error\" = \"follow\"\r\n) => {\r\n  let result: RequestInit = {\r\n    method,\r\n    mode,\r\n    cache,\r\n    credentials,\r\n    redirect,\r\n    headers: {},\r\n  };\r\n\r\n  let headers = new Headers();\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  if (token) headers.append(\"Authorization\", `Bearer ${token}`);\r\n  if (body) {\r\n    result = Object.assign(result, { body: JSON.stringify(body) });\r\n  }\r\n  result.headers = headers;\r\n  return result;\r\n};\r\nconst BASE_URL = \"https://warmkeeper.herokuapp.com/api\";\r\nexport { getFetchOptions, BASE_URL };\r\n","import { BASE_URL, getFetchOptions } from \"../../utils\";\r\nexport interface LoginDto {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const fetchFurnances = (data: LoginDto) => {\r\n  const promise = fetch(\r\n    `${BASE_URL}/login`,\r\n    getFetchOptions<LoginDto>(\"POST\", data, null)\r\n  );\r\n  return promise;\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\nimport { LoginDto } from \"./fetch\";\r\nimport * as API from \"./fetch\";\r\nimport { toast } from \"react-toastify\";\r\nexport type User = {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  fullname: string;\r\n  password: string;\r\n};\r\n\r\nexport interface UserVM {\r\n  token: string | null;\r\n  user: User | null;\r\n}\r\ninterface UserState {\r\n  status: \"idle\" | \"request\" | \"success\" | \"failure\";\r\n  token: string | null;\r\n  hubId: string | null;\r\n  user: User | null;\r\n}\r\n\r\nconst initialState = {\r\n  status: \"idle\",\r\n  token: null,\r\n  hubId: null,\r\n  user: null,\r\n} as UserState;\r\nexport const fetchUser =\r\n  (data: LoginDto): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    try {\r\n      const request = await API.fetchFurnances(data);\r\n      switch (request.status) {\r\n        case 200:\r\n          const user = (await request.json()) as UserVM;\r\n          dispatch(loginSuccess(user));\r\n          break;\r\n        default:\r\n          dispatch(loginFailure());\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      dispatch(loginFailure());\r\n    }\r\n  };\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.token = null;\r\n      state.user = null;\r\n    },\r\n    loginRequest: (state) => {\r\n      state.status = \"request\";\r\n      state.token = null;\r\n\r\n      state.user = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<UserVM>) => {\r\n      const { token, user } = action.payload;\r\n      state.status = \"success\";\r\n\r\n      state.token = token;\r\n      state.user = user;\r\n    },\r\n    loginFailure: (state) => {\r\n      toast.error(\"Niepoprawny login lub hasło!\")\r\n      state.status = \"failure\";\r\n      state.token = null;\r\n\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginFailure, loginSuccess, loginRequest, logout } =\r\n  userSlice.actions;\r\nexport const getUser = (state: RootState) => state.user;\r\nexport const getUserAttributes = (state: RootState) => state.user.user;\r\nexport const getToken = (state: RootState) => state.user.token;\r\nexport const getHubId = (state: RootState) => state.user.hubId;\r\nexport const getLoginFetchStatus = (state: RootState) => state.user.status;\r\nexport const getUserId = (state: RootState) => state.user.user?.id;\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getToken } from \"../../../redux/user/userSlice\";\r\n\r\nconst PrivateRoute: React.FC<{\r\n  component: React.FC;\r\n  path: string;\r\n  exact: boolean;\r\n}> = (props) => {\r\n  const token = useSelector(getToken);\r\n\r\n  return token ? (\r\n    <Route path={props.path} exact={props.exact} component={props.component} />\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nexport default () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode;\r\n}\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n}\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(err: any): ErrorBoundaryState {\r\n    return { hasError: true };\r\n  }\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n    //toast.error(\"Napotkano niespodziewany błąd\",{onClose:()=>{this.props.history.push(\"/\")}})\r\n    console.log(error, errorInfo);\r\n    this.setState({ hasError: true });\r\n  }\r\n  render(): React.ReactNode {\r\n    switch (this.state.hasError) {\r\n      case true:\r\n        return <h1>Zastępcze UI</h1>;\r\n      default:\r\n        return this.props.children;\r\n    }\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\nimport { Twirl as Hamburger } from \"hamburger-react\";\r\n\r\ninterface MenuItem {\r\n  text: string;\r\n  to: string;\r\n  isExact?: boolean;\r\n}\r\ninterface MenuWrapperProps {\r\n  isHidden: boolean;\r\n  setHidden: Dispatch<SetStateAction<boolean>>\r\n  menuItems?: Array<MenuItem>;\r\n}\r\nconst Menu = ({ setHidden, isHidden, menuItems = [] }: MenuWrapperProps) => {\r\n  let match = useRouteMatch(\"/panel/furnance/:id\");\r\n  console.log(match);\r\n  return (\r\n    <nav className={`nav ${isHidden ? \"translateX100\" : \"\"}`}>\r\n      <section className=\"nav__hamburger\"><Hamburger toggled={!isHidden} toggle={setHidden} /></section>\r\n      {menuItems.map((item: MenuItem) => {\r\n        if (item.to !== \"/panel/furnance\") {\r\n          return (\r\n            <NavLink\r\n              onClick={() => {\r\n                if (window.innerWidth <= 800) {\r\n                  setHidden(false)\r\n                }\r\n              }}\r\n              key={item.text}\r\n              exact={item.isExact}\r\n              className=\"nav__link\"\r\n              activeClassName=\"nav__link--active\"\r\n              to={item.to}\r\n            >\r\n              {item.text}\r\n            </NavLink>\r\n          );\r\n        }\r\n        if (match) {\r\n          return (\r\n            <NavLink\r\n              key={item.text}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n              exact={item.isExact}\r\n              className=\"nav__link\"\r\n              activeClassName=\"nav__link--active\"\r\n              to={item.to}\r\n            >\r\n              {item.text}\r\n            </NavLink>\r\n          );\r\n        }\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport SettingsPowerIcon from \"@material-ui/icons/SettingsPower\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport { Furnance } from \"../../../redux/furnance/furnanceSlice\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface FurnanceWrapperProperties {\r\n  furnance: Furnance;\r\n}\r\nconst FurnanceWrapper = ({ furnance }: FurnanceWrapperProperties) => {\r\n  const history = useHistory();\r\n  const { name, id, sensors } = furnance;\r\n  const handleRedirect = () => {\r\n    history.push(`/panel/furnance/${id}`);\r\n  };\r\n  return (\r\n    <section className=\"furnance\" onClick={handleRedirect}>\r\n      <section className=\"furnance__section furnance__section--justifyRight\">\r\n        <h1 className=\"furnance__title\">{name}</h1>\r\n      </section>\r\n      <section className=\"furnance__section\">\r\n        {sensors.map((sensor,id) => (\r\n          <div key={`${sensor.name}&ASD^${id}`} className=\"furnance__icon\">\r\n            <h5 className=\"furnance__iconTitle\">{sensor.status}</h5>\r\n            <img className=\"furnance__img\" src={sensor.img} />\r\n          </div>\r\n        ))}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default FurnanceWrapper;\r\n","import { BASE_URL, getFetchOptions } from \"../../utils\";\r\n\r\nexport const fetchFurnances = ({\r\n  token,\r\n  id,\r\n}: {\r\n  token: string;\r\n  id: string;\r\n}) => {\r\n  const promise = fetch(\r\n    `${BASE_URL}/furnace/w/${id}`,\r\n    getFetchOptions<null>(\"GET\", null, token)\r\n  );\r\n  return promise;\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\nimport * as API from \"./fetch\";\r\nconst initialState = {\r\n  status: \"idle\",\r\n  furnances: [],\r\n  numberOfSkeletons: 6,\r\n} as FurnanceState;\r\ninterface FurnanceVM {\r\n  furnances: Array<Furnance>;\r\n}\r\ninterface FurnanceState {\r\n  status: \"idle\" | \"request\" | \"success\" | \"failure\";\r\n  furnances: Array<Furnance>;\r\n  numberOfSkeletons: number | null;\r\n}\r\nexport interface Furnance {\r\n  id: string;\r\n  name: string;\r\n  sensors: Array<Sensor>;\r\n}\r\nexport interface Sensor {\r\n  name: string;\r\n  status: string;\r\n  img: string;\r\n  data: Array<SensorData>;\r\n}\r\nexport interface SensorData {\r\n  date: string;\r\n  value: number;\r\n}\r\nexport const fetchFurnances =\r\n  (data: { token: string; id: string }): AppThunk =>\r\n  async (dispatch) => {\r\n    dispatch(loadFurnancesRequest());\r\n    try {\r\n      const request = await API.fetchFurnances(data);\r\n      switch (request.status) {\r\n        case 200:\r\n          const furnances = await request.json();\r\n          console.log(furnances);\r\n          dispatch(loadFurnancesSuccess({ furnances }));\r\n          break;\r\n        default:\r\n          dispatch(loadFurnancesFailure());\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      dispatch(loadFurnancesFailure());\r\n    }\r\n  };\r\nconst furnanceSlice = createSlice({\r\n  name: \"furnance\",\r\n  initialState,\r\n  reducers: {\r\n    loadFurnancesRequest: (state) => {\r\n      state.furnances = [];\r\n      state.numberOfSkeletons = 5;\r\n      state.status = \"request\";\r\n    },\r\n    loadFurnancesSuccess: (state, action: PayloadAction<FurnanceVM>) => {\r\n      state.status = \"success\";\r\n      state.furnances = action.payload.furnances;\r\n      state.numberOfSkeletons = null;\r\n    },\r\n    loadFurnancesFailure: (state) => {\r\n      state.furnances = [];\r\n      state.status = \"failure\";\r\n      state.numberOfSkeletons = null;\r\n    },\r\n    setIdle: (state) => {\r\n      state.status = \"idle\";\r\n      state.furnances = [];\r\n      state.numberOfSkeletons = null;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  loadFurnancesFailure,\r\n  loadFurnancesSuccess,\r\n  loadFurnancesRequest,\r\n} = furnanceSlice.actions;\r\n\r\nexport const getFurnances = (state: RootState) => state.furnance.furnances;\r\nexport const getStatus = (state: RootState) => state.furnance.status;\r\nexport const getNumberOfSkeletons = (state: RootState) =>\r\n  state.furnance.numberOfSkeletons;\r\nexport const getFurnanceById = (id: string) => (state: RootState) =>\r\n  state.furnance.furnances.find((furnance) => furnance.id == id);\r\nexport default furnanceSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { Sensor } from \"../../../redux/furnance/furnanceSlice\";\r\n\r\n\r\ninterface SensorFlipCardProps {\r\n  sensor?: Sensor;\r\n}\r\nconst SensorFlipCard = ({ sensor }: SensorFlipCardProps) => {\r\n  const [isFlipped, setIsFlipped] = useState<boolean>(false);\r\n  return (\r\n    <section className=\"furnanceInfo__sensor\">\r\n      <div className=\"flip-card\">\r\n        <div\r\n          className={`flip-card-inner ${isFlipped ? \"rotate180\" : \"\"}`}\r\n          onClick={() => setIsFlipped(!isFlipped)}\r\n        >\r\n          <div className=\"flip-card-front\">{sensor?.name} {sensor?.status}</div>\r\n          <div className=\"flip-card-back\">\r\n            <ResponsiveContainer width=\"90%\" height={180}>\r\n              <LineChart\r\n                width={500}\r\n                height={200}\r\n                data={sensor?.data}\r\n                margin={{\r\n                  top: 10,\r\n                  right: 30,\r\n                  left: 0,\r\n                  bottom: 0,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"2 2\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"value\"\r\n                  stroke=\"#ef5a00\"\r\n                  fill=\"#ef5a00\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default SensorFlipCard;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport React from \"react\";\r\nimport { AppThunk, RootState } from \"../../store\";\r\nexport interface Modal {\r\n  isVisible: boolean;\r\n  onClose?: Function;\r\n  onOpen?: Function;\r\n  children?: React.ReactNode;\r\n}\r\ninterface AppSettingsState {\r\n  modal: Modal;\r\n}\r\nconst initialState = {\r\n  modal: {\r\n    isVisible: false,\r\n  },\r\n} as AppSettingsState;\r\n\r\nconst appSettingsSlice = createSlice({\r\n  name: \"appSettings\",\r\n  initialState,\r\n  reducers: {\r\n    setModal: (state, action: PayloadAction<Modal>) => {\r\n      state.modal = action.payload;\r\n    },\r\n    hideModal: (state) => {\r\n      state.modal = { isVisible: false };\r\n    },\r\n  },\r\n});\r\nexport const { setModal, hideModal } = appSettingsSlice.actions;\r\nexport default appSettingsSlice.reducer;\r\nexport const getModal = (state: RootState) => state.appSettings.modal;\r\n","import React, { memo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Furnance,\r\n  loadFurnancesSuccess,\r\n} from \"../../../../redux/furnance/furnanceSlice\";\r\nimport { getToken, getUserId } from \"../../../../redux/user/userSlice\";\r\nimport { BASE_URL, getFetchOptions } from \"../../../../utils\";\r\nimport LoadingIndicator from \"../../LoadingIndicator\";\r\nimport \"./styles.scss\";\r\nexport interface PutFurnaceDto {\r\n  userId: string;\r\n  name: string;\r\n}\r\nconst FurnanceModal = ({\r\n  furnanceName,\r\n  furnanceId,\r\n}: {\r\n  furnanceName: string | undefined;\r\n  furnanceId: string | undefined;\r\n}) => {\r\n  const [nam, setNam] = useState<string>(furnanceName || \"\");\r\n  const [isFetching, setIsFetching] = useState<boolean>(false);\r\n  const userId = useSelector(getUserId) || \"\";\r\n  const token = useSelector(getToken);\r\n  const dispatch = useDispatch();\r\n  const handleClick = async () => {\r\n    toast.info(\"Wysyłanie...\");\r\n    setIsFetching(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}/furnace/${furnanceId}`,\r\n        getFetchOptions<PutFurnaceDto>(\"PUT\", { userId, name: nam }, token)\r\n      );\r\n      switch (response.status) {\r\n        case 200:\r\n          toast.success(\"Zapisano\");\r\n          const data = await response.json();\r\n          dispatch(loadFurnancesSuccess({ furnances: data }));\r\n          setIsFetching(false);\r\n          break;\r\n        case 400:\r\n          toast.error(\"Pieca nie ma w bazie\");\r\n          setIsFetching(false);\r\n          break;\r\n        default:\r\n          toast.error(\"Nie udało się zapisać danych\");\r\n          setIsFetching(false);\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      toast.error(\"Brak połączenia z serwerem\");\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"furnanceModal\">\r\n      <p>\r\n        <span>Nazwa pieca:</span>\r\n        <input\r\n          className=\"furnanceModal__input\"\r\n          value={nam}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const el = e.currentTarget as HTMLInputElement;\r\n            setNam(el.value);\r\n          }}\r\n        />\r\n      </p>\r\n      {isFetching ? (\r\n        <LoadingIndicator />\r\n      ) : (\r\n        <button\r\n          onClick={handleClick}\r\n          className=\"btn  btn--gradientOrangeAnimation btn--marginBig btn--paddingNormal btn--width50 btn--textCenter btn--fontNormal\"\r\n        >\r\n          Zapisz\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default FurnanceModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFurnanceById } from \"../../../redux/furnance/furnanceSlice\";\r\nimport SensorFlipCard from \"./SensorFlipCard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FilterNoneIcon from \"@material-ui/icons/FilterNone\";\r\nimport { setModal } from \"../../../redux/appSettings/appSettingsSlice\";\r\nimport FurnanceModal from \"../Modal/FurnanceModal\";\r\nimport { fetchFurnances } from \"../../../redux/furnance/fetch\";\r\nconst FurnanceInfo = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const furnance = useSelector(getFurnanceById(id));\r\n  const [isAdvancedViewToggled, setIsAdvancedViewToggled] =\r\n    useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(dispatch(fetchFurnances), 10000);\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n  return (\r\n    <section className=\"furnanceInfo\">\r\n      <section className=\"furnanceInfo__titleArea\">\r\n        <h2>{furnance?.name}</h2>\r\n        <section className=\"furnanceInfo__icons\">\r\n          <FilterNoneIcon\r\n            fontSize=\"large\"\r\n            onClick={() => setIsAdvancedViewToggled(!isAdvancedViewToggled)}\r\n          />\r\n          <SettingsIcon\r\n            fontSize=\"large\"\r\n            onClick={() => {\r\n              dispatch(\r\n                setModal({\r\n                  isVisible: true,\r\n                  children: (\r\n                    <FurnanceModal\r\n                      furnanceName={furnance?.name}\r\n                      furnanceId={furnance?.id}\r\n                    />\r\n                  ),\r\n                })\r\n              );\r\n            }}\r\n          />\r\n        </section>\r\n      </section>\r\n      {isAdvancedViewToggled && (\r\n        <h1 style={{ color: \"black\" }}>Zaawansowany Widok</h1>\r\n      )}\r\n      {!isAdvancedViewToggled &&\r\n        furnance?.sensors.map((sensor, id) => (\r\n          <SensorFlipCard\r\n            key={`${id}__sasda#@!${sensor.name}`}\r\n            sensor={sensor}\r\n          />\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\nexport default FurnanceInfo;\r\n","import React, { useMemo } from \"react\";\r\nimport \"./styles.scss\";\r\ninterface ISkeletonProps {\r\n  icons?: number;\r\n}\r\nconst Skeleton = ({ icons = 5 }: ISkeletonProps) => {\r\n  const iconsArr = useMemo(() => new Array(icons).fill({}), [icons]);\r\n  return (\r\n    <section className=\"furnanceSkeleton\">\r\n      <section className=\"furnanceSkeleton__section furnanceSkeleton__section--justifyRight\">\r\n        <h1 className=\"furnanceSkeleton__title\"></h1>\r\n      </section>\r\n      <section className=\"furnanceSkeleton__section\">\r\n        {iconsArr.map((_, id) => (\r\n          <Icon key={id} />\r\n        ))}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Skeleton;\r\nconst Icon = () => <div className=\"furnanceSkeleton__icon\" />;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  hideModal,\r\n  Modal as ModalProps,\r\n} from \"../../../redux/appSettings/appSettingsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst Modal = ({ isVisible, onClose, onOpen, children }: ModalProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return isVisible\r\n    ? ReactDOM.createPortal(\r\n        <div className=\"modal\">\r\n          <div className=\"modal__top\">\r\n            <CloseIcon\r\n              fontSize=\"large\"\r\n              onClick={() => {\r\n                dispatch(hideModal());\r\n              }}\r\n            />\r\n          </div>\r\n          {children}{\" \"}\r\n        </div>,\r\n        document.getElementById(\"portal\")!\r\n      )\r\n    : null;\r\n};\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Fire, LoadingIndicator } from \"../../shared/components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchUser,\r\n  getLoginFetchStatus,\r\n  getToken,\r\n} from \"../../redux/user/userSlice\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginDto } from \"../../redux/user/fetch\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(getToken);\r\n  const history = useHistory()\r\n  const status = useSelector(getLoginFetchStatus);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data: LoginDto) => {\r\n    dispatch(fetchUser(data));\r\n  };\r\n  return (\r\n    <section className=\"login\">\r\n      {token && <Redirect to=\"/panel\" />}\r\n      <aside className=\"login__left\">\r\n        <Fire />\r\n      </aside>\r\n      <section className=\"login__right\">\r\n        {status === \"request\" ? (\r\n          <LoadingIndicator />\r\n        ) : (\r\n          <form className=\"login__form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n              className=\"login__input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"login\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <span\r\n              className={`login__warning ${\r\n                errors.username && errors.username.type === \"required\"\r\n                  ? \"opacity1\"\r\n                  : \"opacity0\"\r\n              }`}\r\n            >\r\n              Pole wymagane\r\n            </span>\r\n\r\n            <input\r\n              className=\"login__input\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"hasło\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <span\r\n              className={`login__warning ${\r\n                errors.password && errors.password.type === \"required\"\r\n                  ? \"opacity1\"\r\n                  : \"opacity0\"\r\n              }`}\r\n            >\r\n              Pole wymagane\r\n            </span>\r\n\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingBig btn--width50 btn--textCenter btn--fontNormal\"\r\n              value=\"Zaloguj\"\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingBig btn--width50 btn--textCenter btn--fontNormal\"\r\n              value=\"Zarejestruj\"\r\n              onClick={()=>{history.push('/register')}}\r\n            />\r\n          </form>\r\n        )}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/fire2.46c5d2dc.mp4\";","import React from \"react\";\r\nimport VideoBackground from \"../../shared/components/VideoBackground\";\r\nimport campfire from \"../../assets/vids/fire2.mp4\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../shared/components/Button/styles.scss\";\r\nimport { Title } from \"../../shared/components\";\r\nexport default () => {\r\n  return (\r\n    <section className=\"notFound\">\r\n      <VideoBackground videoSource={campfire} />\r\n      <div className=\"notFound__elements\">\r\n        <Title>Żądana strona nie została odnaleziona</Title>\r\n        <Link\r\n          className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingNormal btn--width50 btn--textCenter btn--fontNormal\"\r\n          to=\"/\"\r\n        >\r\n          Powrót\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getToken,\r\n  getUserAttributes,\r\n  loginSuccess,\r\n  User,\r\n  UserVM,\r\n} from \"../../redux/user/userSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BASE_URL, getFetchOptions } from \"../../utils\";\r\nimport './styles.scss'\r\nexport interface PutUserDto {\r\n  email: string;\r\n  username: string;\r\n  fullname: string;\r\n  password: string;\r\n}\r\n\r\nconst Profile = () => {\r\n  const user = useSelector(getUserAttributes);\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(getToken);\r\n  const [fullName, setFullName] = useState(user?.fullname || \"\");\r\n  const [email, setEmail] = useState(user?.email || \"\");\r\n  const [password, setPassword] = useState(user?.password || \"\");\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.currentTarget.name) {\r\n      case \"fullname\":\r\n        setFullName(e.target.value);\r\n        break;\r\n\r\n      case \"password\":\r\n        setPassword(e.target.value);\r\n\r\n        break;\r\n\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, []);\r\n  const handleClick = async () => {\r\n    const request = await fetch(\r\n      `${BASE_URL}/user/${user!.id}`,\r\n      getFetchOptions<PutUserDto>(\r\n        \"PUT\",\r\n        {\r\n          username: user!.username,\r\n          email,\r\n          fullname: fullName,\r\n          password,\r\n        },\r\n        token\r\n      )\r\n    );\r\n\r\n    switch (request.status) {\r\n      case 200:\r\n        const usrVm = (await request.json()) as UserVM;\r\n        dispatch(loginSuccess(usrVm));\r\n        if (usrVm.user) {\r\n          setFullName(usrVm.user.fullname);\r\n          setEmail(usrVm.user.email);\r\n          setPassword(\"\");\r\n          toast.success(\"Zapisano\");\r\n        }\r\n\r\n        break;\r\n      case 400:\r\n        toast.error(\"Hasło powinno zawierać 8 znaków\");\r\n        setPassword(\"\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"profile\">\r\n      <section className=\"profile__field\">\r\n        <h2>Konto: {user?.username}</h2>\r\n      </section>\r\n      <section className=\"profile__field\">\r\n        <label>Imię i nazwisko</label>\r\n        <input name=\"fullname\" value={fullName} onChange={handleChange} />\r\n      </section>\r\n\r\n      <section className=\"profile__field\">\r\n        <label>Hasło</label>\r\n        <input name=\"password\" type=\"password\" value={password} onChange={handleChange} />\r\n      </section>\r\n      <section className=\"profile__field\">\r\n        <label>Email</label>\r\n        <input name=\"email\" value={email} onChange={handleChange} />\r\n      </section>\r\n      <section className=\"profile__field\">\r\n        <button\r\n          onClick={handleClick}\r\n          className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingBig btn--width50 btn--textCenter btn--fontNormal\"\r\n        >\r\n          Zapisz\r\n        </button>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Twirl as Hamburger } from \"hamburger-react\";\r\nimport { FurnanceWrapper, Menu, Modal } from \"../../shared/components\";\r\nimport \"./styles.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Switch from \"react-bootstrap/esm/Switch\";\r\nimport { Route } from \"react-router-dom\";\r\nimport {\r\n  fetchFurnances,\r\n  getFurnances,\r\n  getNumberOfSkeletons,\r\n  getStatus,\r\n} from \"../../redux/furnance/furnanceSlice\";\r\nimport Skeleton from \"../../shared/components/Skeleton\";\r\nimport { FurnanceInfo } from \"../../shared/components/Furnance\";\r\nimport { getModal } from \"../../redux/appSettings/appSettingsSlice\";\r\nimport { getToken, getUserId, logout } from \"../../redux/user/userSlice\";\r\nimport Clock from \"react-live-clock\";\r\nimport Profile from \"../Profile\";\r\nconst Panel = () => {\r\n  const dispatch = useDispatch();\r\n  const [toggled, setToggled] = useState<boolean>(true);\r\n  const [width, setWidth] = useState<number>(window.innerWidth);\r\n  const status = useSelector(getStatus);\r\n  const numberOfSkeletons = useSelector(getNumberOfSkeletons);\r\n  const furnances = useSelector(getFurnances);\r\n  const modal = useSelector(getModal);\r\n  const token = useSelector(getToken);\r\n  const id = useSelector(getUserId);\r\n  console.log(numberOfSkeletons);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", (e) => {\r\n      const wnd = e.currentTarget as typeof window;\r\n      setWidth(wnd.innerWidth);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"resize\", (e) => {});\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    const t = token || \"\";\r\n    const uid = id || \"\";\r\n    dispatch(fetchFurnances({ token:t, id:uid }));\r\n  }, []);\r\n  return (\r\n    <section className={`panel ${modal.isVisible ? \"blurred\" : \"\"}`}>\r\n      <Modal {...modal} />\r\n      <section className=\"panel__top\">\r\n        <Hamburger toggle={setToggled} toggled={toggled} />\r\n      </section>\r\n      <section className=\"panel__middle\">\r\n        <section className=\"panel__middle--left\">\r\n          <Menu\r\n            setHidden={setToggled}\r\n            isHidden={!toggled}\r\n            menuItems={[\r\n              { to: \"/panel\", isExact: true, text: \"Home\" },\r\n              { to: \"/panel/furnance\", isExact: false, text: \"Piec\" },\r\n              {\r\n                to: \"/panel/weatherForecast\",\r\n                isExact: true,\r\n                text: \"Sprawdź prognozę pogody\",\r\n              },\r\n              { to: \"/panel/profile\", isExact: true, text: \"Profil\" },\r\n              { to: \"/panel/logout\", isExact: true, text: \"Wyloguj\" },\r\n            ]}\r\n          />\r\n        </section>\r\n        <section\r\n          className={`panel__middle--right ${\r\n            !toggled && width > 800 ? \" translateX14\" : \"\"\r\n          }`}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/panel\">\r\n              {status === \"request\" &&\r\n                new Array(9).fill({}).map((_, id) => <Skeleton key={id} />)}\r\n              {status === \"success\" &&\r\n                furnances.map((furnance) => (\r\n                  <FurnanceWrapper furnance={furnance} key={furnance.id} />\r\n                ))}\r\n              {status === \"failure\" && <button>Spróbuj ponownie ! </button>}\r\n            </Route>\r\n            <Route path=\"/panel/furnance/:id\">\r\n              <FurnanceInfo />\r\n            </Route>\r\n            <Route path=\"/panel/weatherForecast\">\r\n              <h2>Pogoda</h2>\r\n            </Route>\r\n            <Route path=\"/panel/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/panel/logout\">\r\n              <Logout />\r\n            </Route>\r\n          </Switch>\r\n        </section>\r\n      </section>\r\n      <div className=\"panel__top--time\">\r\n        <span>\r\n          <Clock />\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Panel;\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n  return <div></div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Fire, LoadingIndicator } from \"../../shared/components\";\r\nimport \"./styles.scss\";\r\nimport \"../Login/styles.scss\";\r\nimport { toast } from \"react-toastify\";\r\nimport { BASE_URL, getFetchOptions } from \"../../utils\";\r\nimport { useHistory } from \"react-router\";\r\nexport interface CreateUserDto {\r\n  email: string;\r\n  username: string;\r\n  fullname: string;\r\n  password: string;\r\n}\r\nexport const Register = React.memo(() => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [isFetching, setIsFetching] = useState<boolean>(false);\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [fullname, setFullname] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const handleClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    toast.info(\"Łączenie z serwerem...\");\r\n    try {\r\n      setIsFetching(true);\r\n      const response = await fetch(\r\n        `${BASE_URL}/user/create`,\r\n        getFetchOptions<CreateUserDto>(\r\n          \"POST\",\r\n          { email, username, fullname, password },\r\n          null\r\n        )\r\n      );\r\n      switch (response.status) {\r\n        case 200:\r\n          toast.success(\"Zarejestrowano użytkownika\");\r\n          history.push(\"/\");\r\n          setIsFetching(false);\r\n          break;\r\n        default:\r\n          toast.error(\"Nie udało się zarejestrować użytkownika\");\r\n          setIsFetching(false);\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      toast.error(\"Błąd połączenia\");\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const el: HTMLInputElement = e.currentTarget;\r\n    switch (el.name) {\r\n      case \"email\":\r\n        setEmail(el.value);\r\n        break;\r\n      case \"username\":\r\n        setUsername(el.value);\r\n\r\n        break;\r\n      case \"fullname\":\r\n        setFullname(el.value);\r\n\r\n        break;\r\n      case \"password\":\r\n        setPassword(el.value);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"register\">\r\n      <section className=\"register__left\">\r\n        <Fire />\r\n      </section>\r\n      <section className=\"register__right\">\r\n        <form className=\"register__form\">\r\n          <h1 className=\"register__title\">\r\n            <span className=\"register__title--orange\">WARM</span>\r\n            <span className=\"register__title--white\">KEEPER</span>\r\n          </h1>\r\n          <input\r\n            placeholder=\"Imię i nazwisko\"\r\n            type=\"text\"\r\n            className=\"register__input\"\r\n            name=\"fullname\"\r\n            value={fullname}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            placeholder=\"Nazwa użytkownika\"\r\n            type=\"text\"\r\n            className=\"register__input\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            placeholder=\"Hasło\"\r\n            type=\"password\"\r\n            className=\"register__input\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            className=\"register__input\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          {isFetching ? (\r\n            <LoadingIndicator />\r\n          ) : (\r\n            <button\r\n              onClick={handleClick}\r\n              className=\"btn btn--fontBlack btn--gradientOrangeAnimation btn--marginBig btn--paddingBig btn--width50 btn--textCenter btn--fontNormal\"\r\n            >\r\n              Zarejestruj\r\n            </button>\r\n          )}\r\n        </form>\r\n      </section>\r\n    </section>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.scss\";\r\nimport \"./app/shared/styles/globalClasses.scss\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Login, NotFound, Panel } from \"./app/pages\";\r\nimport { PrivateRoute } from \"./app/shared/components\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Register } from \"./app/pages/Register\";\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <PrivateRoute exact={false} path=\"/panel\" component={Panel} />\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n        <ToastContainer\r\n          position=\"bottom-left\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Router>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport userReducer from \"./redux/user/userSlice\";\r\nimport furnanceReducer from \"./redux/furnance/furnanceSlice\";\r\nimport appSettingsReducer from \"./redux/appSettings/appSettingsSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    user: userReducer,\r\n    furnance: furnanceReducer,\r\n    appSettings:appSettingsReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}